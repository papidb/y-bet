generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../database.sqlite"
}

model account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime
  user                  user      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique(map: "sqlite_autoindex_session_2")
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      user     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id            String    @id
  name          String
  email         String    @unique(map: "sqlite_autoindex_user_2")
  emailVerified Int
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  account       account[]
  session       session[]
}

model verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?
}

model Game {
  id            String @id @default(cuid())
  homeTeam      String
  awayTeam      String
  homeScore     Int
  awayScore     Int
  remainingTime String
  odds          Odds   @relation(fields: [oddsId], references: [id])
  oddsId        String @unique
  bets          Bet[]
}

model Odds {
  id   String @id @default(cuid())
  home Float
  away Float
  draw Float
  Game Game?
}

model Bet {
  id     String @id @default(cuid())
  gameId String
  amount Float
  type   String
  game   Game   @relation(fields: [gameId], references: [id])
}

// enum BetType {
//   home
//   away
//   draw
// }

model LeaderboardEntry {
  id            String @id @default(cuid())
  userId        String // Assuming userId is a reference to a User model (not defined here)
  username      String
  totalWinnings Float
}
